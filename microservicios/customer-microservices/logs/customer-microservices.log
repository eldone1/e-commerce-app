2025-06-03 20:24:11 - Fetching config from server at : http://localhost:8888
2025-06-03 20:24:11 - Located environment: name=customer-microservices, profiles=[default], label=null, version=null, state=null
2025-06-03 20:24:11 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to bind properties under 'logging.level.com.idone.microservices' to org.springframework.boot.logging.LogLevel:

    Property: logging.level.com.idone.microservices
    Value: "WARM"
    Origin: Config Server classpath:/config/customer-microservices.yml:14:30
    Reason: failed to convert java.lang.String to org.springframework.boot.logging.LogLevel (caused by java.lang.IllegalArgumentException: No enum constant org.springframework.boot.logging.LogLevel.WARM)

Action:

Update your application's configuration. The following values are valid:

    DEBUG
    ERROR
    FATAL
    INFO
    OFF
    TRACE
    WARN

2025-06-03 20:26:13 - Fetching config from server at : http://localhost:8888
2025-06-03 20:26:13 - Located environment: name=customer-microservices, profiles=[default], label=null, version=null, state=null
2025-06-03 20:26:14 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to bind properties under 'logging.level.com.idone.microservicios' to org.springframework.boot.logging.LogLevel:

    Property: logging.level.com.idone.microservicios
    Value: "WARM"
    Origin: Config Server classpath:/config/customer-microservices.yml:14:31
    Reason: failed to convert java.lang.String to org.springframework.boot.logging.LogLevel (caused by java.lang.IllegalArgumentException: No enum constant org.springframework.boot.logging.LogLevel.WARM)

Action:

Update your application's configuration. The following values are valid:

    DEBUG
    ERROR
    FATAL
    INFO
    OFF
    TRACE
    WARN

2025-06-03 20:28:10 - Fetching config from server at : http://localhost:8888
2025-06-03 20:28:10 - Located environment: name=customer-microservices, profiles=[default], label=null, version=null, state=null
2025-06-03 20:28:11 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to bind properties under 'logging.level.com.idone.microservices' to org.springframework.boot.logging.LogLevel:

    Property: logging.level.com.idone.microservices
    Value: "WARM"
    Origin: Config Server classpath:/config/customer-microservices.yml:14:30
    Reason: failed to convert java.lang.String to org.springframework.boot.logging.LogLevel (caused by java.lang.IllegalArgumentException: No enum constant org.springframework.boot.logging.LogLevel.WARM)

Action:

Update your application's configuration. The following values are valid:

    DEBUG
    ERROR
    FATAL
    INFO
    OFF
    TRACE
    WARN

2025-06-03 20:29:01 - Fetching config from server at : http://localhost:8888
2025-06-03 20:29:01 - Located environment: name=customer-microservices, profiles=[default], label=null, version=null, state=null
2025-06-03 20:29:03 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-06-03 20:29:03 - Finished Spring Data repository scanning in 336 ms. Found 1 MongoDB repository interface.
2025-06-03 20:29:04 - BeanFactory id=58ee171b-7309-35c3-b801-063cb5683303
2025-06-03 20:29:05 - Tomcat initialized with port 8091 (http)
2025-06-03 20:29:05 - Starting service [Tomcat]
2025-06-03 20:29:05 - Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-06-03 20:29:05 - Initializing Spring embedded WebApplicationContext
2025-06-03 20:29:05 - Root WebApplicationContext: initialization completed in 3768 ms
2025-06-03 20:29:06 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.4.0"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/17.0.2+8-86"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@481ed95c, com.mongodb.Jep395RecordCodecProvider@40cf6254, com.mongodb.KotlinCodecProvider@40bf0e15]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
2025-06-03 20:29:06 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=116456400, minRoundTripTimeNanos=0}
2025-06-03 20:29:06 - Registering converter from interface java.util.List to interface org.springframework.data.domain.Vector as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2025-06-03 20:29:08 - Cannot determine local hostname
2025-06-03 20:29:08 - Registering converter from interface java.util.List to interface org.springframework.data.domain.Vector as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2025-06-03 20:29:11 - Cannot determine local hostname
2025-06-03 20:29:11 - Eureka HTTP Client uses RestTemplate.
2025-06-03 20:29:11 - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-06-03 20:29:11 - Setting initial instance status as: STARTING
2025-06-03 20:29:11 - Initializing Eureka in region us-east-1
2025-06-03 20:29:11 - Resolving eureka endpoints via configuration
2025-06-03 20:29:11 - Disable delta property : false
2025-06-03 20:29:11 - Single vip registry refresh property : null
2025-06-03 20:29:11 - Force full registry fetch : false
2025-06-03 20:29:11 - Application is null : false
2025-06-03 20:29:11 - Registered Applications size is zero : true
2025-06-03 20:29:11 - Application version is -1: true
2025-06-03 20:29:11 - Getting all instance registry info from the eureka server
2025-06-03 20:29:12 - The response status is 200
2025-06-03 20:29:12 - Starting heartbeat executor: renew interval is: 30
2025-06-03 20:29:12 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-06-03 20:29:12 - Discovery Client initialized at timestamp 1749000552616 with initial instances count: 0
2025-06-03 20:29:12 - Registering application CUSTOMER-MICROSERVICES with eureka with status UP
2025-06-03 20:29:12 - Saw local status change event StatusChangeEvent [timestamp=1749000552632, current=UP, previous=STARTING]
2025-06-03 20:29:12 - DiscoveryClient_CUSTOMER-MICROSERVICES/localhost:customer-microservices:8091: registering service...
2025-06-03 20:29:12 - Tomcat started on port 8091 (http) with context path '/'
2025-06-03 20:29:12 - Updating port to 8091
2025-06-03 20:29:12 - DiscoveryClient_CUSTOMER-MICROSERVICES/localhost:customer-microservices:8091 - registration status: 204
2025-06-03 20:29:14 - Cannot determine local hostname
2025-06-03 20:29:42 - Disable delta property : false
2025-06-03 20:29:42 - Single vip registry refresh property : null
2025-06-03 20:29:42 - Force full registry fetch : false
2025-06-03 20:29:42 - Application is null : false
2025-06-03 20:29:42 - Registered Applications size is zero : true
2025-06-03 20:29:42 - Application version is -1: false
2025-06-03 20:29:42 - Getting all instance registry info from the eureka server
2025-06-03 20:29:42 - The response status is 200
2025-06-03 20:42:14 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2025-06-03 20:42:14 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=customer-microservices, profiles=[default], label=null, version=null, state=null
2025-06-03 20:42:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-06-03 20:42:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1035 ms. Found 1 MongoDB repository interface.
2025-06-03 20:42:19 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=58ee171b-7309-35c3-b801-063cb5683303
2025-06-03 20:42:21 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8091 (http)
2025-06-03 20:42:21 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-03 20:42:21 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-06-03 20:42:21 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-03 20:42:21 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6933 ms
2025-06-03 20:42:22 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.4.0"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/17.0.2+8-86"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@42ecc554, com.mongodb.Jep395RecordCodecProvider@443af394, com.mongodb.KotlinCodecProvider@734f8317]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
2025-06-03 20:42:22 [cluster-ClusterId{value='683fa47ea42e51afee34298b', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=77159500, minRoundTripTimeNanos=0}
2025-06-03 20:42:22 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from interface java.util.List to interface org.springframework.data.domain.Vector as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2025-06-03 20:42:25 [main] INFO  o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2025-06-03 20:42:26 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from interface java.util.List to interface org.springframework.data.domain.Vector as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2025-06-03 20:42:29 [main] INFO  o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2025-06-03 20:42:29 [main] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-06-03 20:42:29 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-06-03 20:42:30 [main] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-06-03 20:42:30 [main] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-06-03 20:42:30 [main] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-03 20:42:30 [main] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-06-03 20:42:30 [main] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-06-03 20:42:30 [main] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-06-03 20:42:30 [main] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-06-03 20:42:30 [main] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-06-03 20:42:30 [main] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-06-03 20:42:30 [main] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-06-03 20:42:31 [main] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-06-03 20:42:31 [main] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-06-03 20:42:31 [main] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-06-03 20:42:31 [main] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1749001351571 with initial instances count: 0
2025-06-03 20:42:31 [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application CUSTOMER-MICROSERVICES with eureka with status UP
2025-06-03 20:42:31 [main] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1749001351602, current=UP, previous=STARTING]
2025-06-03 20:42:31 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMER-MICROSERVICES/localhost:customer-microservices:8091: registering service...
2025-06-03 20:42:31 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8091 (http) with context path '/'
2025-06-03 20:42:31 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8091
2025-06-03 20:42:32 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_CUSTOMER-MICROSERVICES/localhost:customer-microservices:8091 - registration status: 204
2025-06-03 20:42:34 [main] INFO  o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2025-06-03 20:42:39 [http-nio-8091-exec-3] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-03 20:42:39 [http-nio-8091-exec-3] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-03 20:42:39 [http-nio-8091-exec-3] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-06-03 20:43:01 [DiscoveryClient-CacheRefreshExecutor-%d] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-06-03 20:43:01 [DiscoveryClient-CacheRefreshExecutor-%d] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-06-03 20:43:01 [DiscoveryClient-CacheRefreshExecutor-%d] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-06-03 20:43:01 [DiscoveryClient-CacheRefreshExecutor-%d] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-06-03 20:43:01 [DiscoveryClient-CacheRefreshExecutor-%d] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-06-03 20:43:01 [DiscoveryClient-CacheRefreshExecutor-%d] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: false
2025-06-03 20:43:01 [DiscoveryClient-CacheRefreshExecutor-%d] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-06-03 20:43:01 [DiscoveryClient-CacheRefreshExecutor-%d] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-06-03 20:47:30 [AsyncResolver-bootstrap-executor-%d] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
